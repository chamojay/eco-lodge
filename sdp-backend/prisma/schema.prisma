generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model customers {
  CustomerID     Int              @id @default(autoincrement())
  Title          customers_Title?
  FirstName      String           @db.VarChar(50)
  LastName       String           @db.VarChar(50)
  Email          String           @db.VarChar(100)
  Phone          String           @db.VarChar(20)
  Country        String           @db.VarChar(50)
  CreatedAt      DateTime?        @default(now()) @db.Timestamp(0)
  NIC            String?          @db.VarChar(12)
  PassportNumber String?          @db.VarChar(15)
  reservations   reservations[]
}

model extra_charge_types {
  TypeID        Int             @id @default(autoincrement())
  Name          String          @db.VarChar(100)
  DefaultAmount Decimal         @db.Decimal(10, 2)
  extra_charges extra_charges[]
}

model extra_charges {
  ChargeID           Int                 @id @default(autoincrement())
  ReservationID      Int
  TypeID             Int?
  Description        String?             @db.VarChar(255)
  Amount             Decimal             @db.Decimal(10, 2)
  CreatedAt          DateTime?           @default(now()) @db.DateTime(0)
  reservations       reservations        @relation(fields: [ReservationID], references: [ReservationID], onDelete: Cascade, onUpdate: NoAction, map: "extra_charges_ibfk_1")
  extra_charge_types extra_charge_types? @relation(fields: [TypeID], references: [TypeID], onUpdate: NoAction, map: "extra_charges_ibfk_2")

  @@index([ReservationID], map: "ReservationID")
  @@index([TypeID], map: "TypeID")
}

model reservations {
  ReservationID          Int                      @id @default(autoincrement())
  CustomerID             Int
  CheckInDate            DateTime                 @db.Date
  CheckOutDate           DateTime                 @db.Date
  TotalAmount            Decimal                  @db.Decimal(10, 2)
  Room_Status            reservations_Room_Status @default(Pending)
  Adults                 Int?
  Children               Int?
  SpecialRequests        String?                  @db.Text
  ArrivalTime            DateTime?                @db.Time(0)
  DepartureTime          DateTime?                @db.Time(0)
  CreatedAt              DateTime?                @default(now()) @db.Timestamp(0)
  RoomID                 Int
  PackageID              Int?
  extra_charges          extra_charges[]
  payments               payments[]
  reservation_activities reservation_activities[]
  customers              customers                @relation(fields: [CustomerID], references: [CustomerID], onDelete: NoAction, onUpdate: NoAction, map: "reservations_ibfk_1")
  rooms                  rooms                    @relation(fields: [RoomID], references: [RoomID], onDelete: NoAction, onUpdate: NoAction, map: "reservations_ibfk_2")
  package_types          package_types?           @relation(fields: [PackageID], references: [PackageID], onDelete: NoAction, onUpdate: NoAction, map: "reservations_ibfk_3")

  @@index([CustomerID], map: "CustomerID")
  @@index([RoomID], map: "RoomID")
  @@index([PackageID], map: "PackageID")
}

model rooms {
  RoomID       Int            @id @default(autoincrement())
  RoomNumber   Int            @unique(map: "RoomNumber")
  LocalPrice   Decimal        @db.Decimal(10, 2)
  Description  String?        @db.Text
  ForeignPrice Decimal        @db.Decimal(10, 2)
  MaxPeople    Int
  TypeID       Int?
  reservations reservations[]
  room_types   room_types?    @relation(fields: [TypeID], references: [TypeID], onDelete: NoAction, onUpdate: NoAction, map: "rooms_ibfk_1")

  @@index([TypeID], map: "TypeID")
}

model activities {
  ActivityID             Int                      @id @default(autoincrement())
  Name                   String                   @db.VarChar(100)
  Description            String?                  @db.Text
  LocalPrice             Decimal                  @db.Decimal(10, 2)
  ForeignPrice           Decimal                  @db.Decimal(10, 2)
  CreatedAt              DateTime?                @default(now()) @db.Timestamp(0)
  reservation_activities reservation_activities[]
}

model reservation_activities {
  ReservationActivityID Int          @id @default(autoincrement())
  ReservationID         Int
  ActivityID            Int
  ScheduledDate         DateTime     @db.Date
  Amount                Decimal      @db.Decimal(10, 2)
  CreatedAt             DateTime?    @default(now()) @db.Timestamp(0)
  Participants          Int          @default(1)
  reservations          reservations @relation(fields: [ReservationID], references: [ReservationID], onDelete: Cascade, onUpdate: NoAction, map: "reservation_activities_ibfk_1")
  activities            activities   @relation(fields: [ActivityID], references: [ActivityID], onUpdate: NoAction, map: "reservation_activities_ibfk_2")

  @@index([ActivityID], map: "ActivityID")
  @@index([ReservationID], map: "ReservationID")
}

model menu_categories {
  CategoryID Int    @id @default(autoincrement())
  Name       String @db.VarChar(100)
}

model menu_items {
  ItemID                 Int                      @id @default(autoincrement())
  Name                   String                   @db.VarChar(100)
  Price                  Decimal                  @db.Decimal(10, 2)
  CategoryID             Int?
  ImagePath              String?                  @db.VarChar(255)
  IsActive               Boolean?                 @default(true)
  restaurant_order_items restaurant_order_items[]

  @@index([CategoryID], map: "CategoryID")
}

model payments {
  PaymentID         Int                    @id @default(autoincrement())
  Amount            Decimal                @db.Decimal(10, 2)
  PaymentDate       DateTime?              @default(now()) @db.DateTime(0)
  PaymentMethod     payments_PaymentMethod
  ReservationID     Int?
  OrderID           Int?
  Source            payments_Source        @default(Web)
  reservations      reservations?          @relation(fields: [ReservationID], references: [ReservationID], onUpdate: NoAction, map: "payments_ibfk_1")
  restaurant_orders restaurant_orders?     @relation(fields: [OrderID], references: [OrderID], onUpdate: NoAction, map: "payments_ibfk_2")

  @@index([OrderID], map: "OrderID")
  @@index([ReservationID], map: "ReservationID")
}

model restaurant_order_items {
  OrderItemID       Int               @id @default(autoincrement())
  OrderID           Int
  ItemID            Int
  Quantity          Int
  restaurant_orders restaurant_orders @relation(fields: [OrderID], references: [OrderID], onDelete: Cascade, onUpdate: NoAction, map: "restaurant_order_items_ibfk_1")
  menu_items        menu_items        @relation(fields: [ItemID], references: [ItemID], onUpdate: NoAction, map: "restaurant_order_items_ibfk_2")

  @@index([ItemID], map: "ItemID")
  @@index([OrderID], map: "OrderID")
}

model restaurant_orders {
  OrderID                Int                      @id @default(autoincrement())
  OrderDate              DateTime?                @default(now()) @db.DateTime(0)
  TotalAmount            Decimal                  @db.Decimal(10, 2)
  payments               payments[]
  restaurant_order_items restaurant_order_items[]
}

model users {
  UserID    Int        @id @default(autoincrement())
  Username  String     @unique(map: "Username") @db.VarChar(50)
  Password  String     @db.VarChar(255)
  Role      users_Role
  CreatedAt DateTime?  @default(now()) @db.Timestamp(0)
  UpdatedAt DateTime?  @default(now()) @db.Timestamp(0)
}

model package_types {
  PackageID       Int            @id @default(autoincrement())
  Name            String         @unique(map: "Name") @db.VarChar(50)
  Description     String?        @db.Text
  PriceMultiplier Decimal        @db.Decimal(3, 2)
  ImagePath       String?        @db.VarChar(255)
  CreatedAt       DateTime?      @default(now()) @db.Timestamp(0)
  reservations    reservations[]
}

model room_types {
  TypeID      Int       @id @default(autoincrement())
  Name        String    @unique(map: "Name") @db.VarChar(50)
  Description String?   @db.Text
  ImagePath   String?   @db.VarChar(255)
  CreatedAt   DateTime? @default(now()) @db.Timestamp(0)
  rooms       rooms[]
}

enum customers_Title {
  Mr
  Mrs
  Ms
}

enum reservations_Room_Status {
  Pending
  Confirmed
  Cancelled
  Completed
}

enum payments_PaymentMethod {
  Cash
  Card
  Online
}

enum users_Role {
  ADMIN
  RECEPTION
  RESTAURANT
}

enum payments_Source {
  Web
  Reception
  Restaurant
}
